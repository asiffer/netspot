name: Build
on:
  workflow_dispatch:
  repository_dispatch:
    types: [release_build]

jobs:
  build:
    name: Build (all architectures)
    runs-on: ubuntu-latest
    container: 
      image: golang:1.16.3-alpine
      env:
        LIBPCAP_VERSION: 1.10.0
        LIBPCAP_DIR: /libpcap
        # SYSTEM
        PACKAGES: nano bash linux-headers git flex bison wget make bluez-dev bluez
        # CROSS COMPILATION OPTIONS
        #Â see https://github.com/just-containers/musl-cross-make/releases/
        GCC_VERSION: 9.2.0
        MUSL_CROSS_MAKE_VERSION: v15
        TARGET_ARCH: x86_64-linux arm-linux aarch64-linux
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Put current version into environment
        run: echo "NETSPOT_VERSION=$(make print_version DEBUG=false)" >> $GITHUB_ENV

      - name: Symbolic link to GOPATH
        run: ln -s $GITHUB_WORKSPACE $GOPATH/src/netspot

      - name: Setup CGO env variables
        run: |
          echo CGO_ENABLED=1 >> $GITHUB_ENV
          echo CGO_LDFLAGS="-L${LIBPCAP_DIR}/libpcap-${LIBPCAP_VERSION}" >> $GITHUB_ENV
          echo CGO_CFLAGS="-O2 -I${LIBPCAP_DIR}/libpcap-${LIBPCAP_VERSION}" >> $GITHUB_ENV
          env

      - name: Get packages
        run: apk update; apk add $PACKAGES

      - name: Get libpcap sources
        run: "${GITHUB_WORKSPACE}/dev/image/get_libpcap_sources.sh"
      
      - name: Install toolchain
        run: "${GITHUB_WORKSPACE}/dev/image/install_toolchain.sh"

      - name: Build netspot (x86_64)
        run: $GITHUB_WORKSPACE/dev/build/builder.sh x86_64-linux

      - name: Build netspot (arm)
        run: $GITHUB_WORKSPACE/dev/build/builder.sh arm-linux

      - name: Build netspot (aarch64)
        run: $GITHUB_WORKSPACE/dev/build/builder.sh aarch64-linux

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: netspot
          path: bin/

      # steps in case of repository_dispatch (release) #
      - name: Upload amd64 binary to release
        if: ${{ github.event == 'repository_dispatch' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netspot-${{ env.NETSPOT_VERSION }}-amd64-linux-static
          tag: ${{ github.event.client_payload.tag }}
          overwrite: true
    
      - name: Upload arm binary to release
        if: ${{ github.event == 'repository_dispatch' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netspot-${{ env.NETSPOT_VERSION }}-arm-linux-static
          tag: ${{ github.event.client_payload.tag }}
          overwrite: true
    
      - name: Upload arm64 binary to release
        if: ${{ github.event == 'repository_dispatch' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netspot-${{ env.NETSPOT_VERSION }}-arm64-linux-static
          tag: ${{ github.event.client_payload.tag }}
          overwrite: true
