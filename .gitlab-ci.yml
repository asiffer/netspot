image: golang:1.15.2-alpine

stages:
  - build

variables:
  LIBPCAP_VERSION: "1.9.1"
  LIBPCAP_DIR: "/libpcap"
  PACKAGES: "nano bash linux-headers git flex bison wget make bluez-dev bluez"
  CGO_ENABLED: 1
  CGO_LDFLAGS: "-L$LIBPCAP_DIR/libpcap-$LIBPCAP_VERSION"
  CGO_CFLAGS: "-O2 -I$LIBPCAP_DIR/libpcap-$LIBPCAP_VERSION"
  GCC_VERSION: "9.2.0"
  MUSL_CROSS_MAKE_VERSION: "v15"
  TZ: "Europe/Paris"
  ARTIFACT_NAME_TEMPLATE: "$CI_JOB_NAME"
  BUILD_IMAGE: "golang:1.15.2-alpine"
  


.install-deps: &install-deps
  - apk update
  - apk add $PACKAGES

.get-libpcap-src: &get-libpcap-src
  - $CI_PROJECT_DIR/dev/image/get_libpcap_sources.sh

# .build-libraries: &build-libraries
#   - cd /; git clone https://github.com/ntop/PF_RING.git
#   - mkdir -p /usr/local/include/linux/; cp /PF_RING/kernel/linux/pf_ring.h /usr/local/include/linux/pf_ring.h
#   - cp /go/src/netspot/extra/strdup.c /PF_RING/userland/lib
#   - cd /PF_RING/userland/lib; ./configure;
#   - sed -i 's/pfring_hw_filtering.o/pfring_hw_filtering.o strdup.o/' Makefile;
#   - make; make install
#   - cp /go/src/netspot/extra/strdup.c /PF_RING/userland/libpcap
#   - cd /PF_RING/userland/libpcap; ./configure
#   - sed -i 's/etherent.c/etherent.c strdup.c/' Makefile;
#   - make; make install

build_amd64:
  stage: build
  image: $BUILD_IMAGE
  only:
    - web
  variables:
    TARGET_ARCH: x86_64-linux
  before_script:
    - ln -s /builds/netspot/netspot /go/src/netspot
    - *install-deps
    - *get-libpcap-src
    - $CI_PROJECT_DIR/dev/image/install_toolchain.sh
  script:
    - $CI_PROJECT_DIR/dev/build/builder.sh $TARGET_ARCH
  artifacts:
    name: $ARTIFACT_NAME_TEMPLATE
    paths:
      - bin/netspot-$TARGET_ARCH

build_arm:
  stage: build
  image: $BUILD_IMAGE
  only:
    - web
  variables:
    TARGET_ARCH: arm-linux
  before_script:
    - ln -s /builds/netspot/netspot /go/src/netspot
    - *install-deps
    - *get-libpcap-src
    - $CI_PROJECT_DIR/dev/image/install_toolchain.sh
  script:
    - $CI_PROJECT_DIR/dev/build/builder.sh $TARGET_ARCH
  artifacts:
    name: $ARTIFACT_NAME_TEMPLATE
    paths:
      - bin/netspot-$TARGET_ARCH


build_aarch64:
  stage: build
  image: $BUILD_IMAGE
  only:
    - web
  variables:
    TARGET_ARCH: aarch64-linux
  before_script:
    - ln -s /builds/netspot/netspot /go/src/netspot
    - *install-deps
    - *get-libpcap-src
    - $CI_PROJECT_DIR/dev/image/install_toolchain.sh
  script:
    - $CI_PROJECT_DIR/dev/build/builder.sh $TARGET_ARCH
  artifacts:
    name: $ARTIFACT_NAME_TEMPLATE
    paths:
      - bin/netspot-$TARGET_ARCH

# build_armhf:
#   stage: build
#   image: $GO_IMAGE
#   only:
#     - web
#   before_script:
#     - apt-get update
#     - apt-get install -y $PACKAGES linux-libc-dev-armhf-cross gcc-arm-linux-gnueabihf
#     - pip3 install pybadges
#     - ln -s /builds/asr/netspot /go/src/netspot
#     - cd /tmp
#     - wget http://www.tcpdump.org/release/libpcap-$LIBPCAP_VERSION.tar.gz
#     - tar xvf libpcap-$LIBPCAP_VERSION.tar.gz
#     - cd libpcap-$LIBPCAP_VERSION
#     - CC=arm-linux-gnueabihf-gcc ./configure --host=arm-linux --with-pcap=linux
#     - CC=arm-linux-gnueabihf-gcc make
#     - export CGO_ENABLED=1
#     - export CGO_LDFLAGS=-L/tmp/libpcap-$LIBPCAP_VERSION
#     - export CGO_CFLAGS="-g -O2 -I/tmp/libpcap-$LIBPCAP_VERSION"
#     - cd /go/src/netspot
#     - make deps
#     - export CC=arm-linux-gnueabihf-gcc
#     - export GOOS=linux
#     - export GOARCH=arm
#     - export GOARM=7
#   script:
#     - make build
#     - LD_LIBRARY_PATH=/usr/arm-linux-gnueabihf/lib make debian
#   after_script:
#     - mv bin/netspot bin/netspot-armhf
#     - mv bin/netspotctl bin/netspotctl-armhf
#     - python3 .badge.gitlab-ci.py -d /go/src/netspot/bin -a $CI_JOB_NAME -o $CI_JOB_NAME.svg
#   artifacts:
#     name: $ARTIFACT_NAME_TEMPLATE
#     paths:
#       - bin/netspot-armhf
#       - bin/netspotctl-armhf
#       - dist/debian/*.deb
#       - $CI_JOB_NAME.svg

# build_aarch64:
#   stage: build
#   image: $GO_IMAGE
#   only:
#     - web
#   before_script:
#     - apt-get update
#     - apt-get install -y $PACKAGES linux-libc-dev-arm64-cross gcc-aarch64-linux-gnu
#     - pip3 install pybadges
#     - ln -s /builds/asr/netspot /go/src/netspot
#     - make deps
#     - cd /tmp
#     - export CC=aarch64-linux-gnu-gcc
#     - wget http://www.tcpdump.org/release/libpcap-$LIBPCAP_VERSION.tar.gz
#     - tar xvf libpcap-$LIBPCAP_VERSION.tar.gz
#     - cd libpcap-$LIBPCAP_VERSION
#     - ./configure --host=arm-linux --with-pcap=linux
#     - make
#     - cd /go/src/netspot
#     - export CGO_ENABLED=1
#     - export CGO_LDFLAGS=-L/tmp/libpcap-$LIBPCAP_VERSION
#     - export CGO_CFLAGS="-g -O2 -I/tmp/libpcap-$LIBPCAP_VERSION"
#     - export GOOS=linux
#     - export GOARCH=arm64
#   script:
#     - make build
#     - LD_LIBRARY_PATH=/usr/aarch64-linux-gnu/lib make debian
#   after_script:
#     - mv bin/netspot bin/netspot-aarch64
#     - mv bin/netspotctl bin/netspotctl-aarch64
#     - python3 .badge.gitlab-ci.py -d /go/src/netspot/bin -a $CI_JOB_NAME -o $CI_JOB_NAME.svg
#   artifacts:
#     name: $ARTIFACT_NAME_TEMPLATE
#     paths:
#       - bin/netspot-aarch64
#       - bin/netspotctl-aarch64
#       - dist/debian/*.deb
#       - $CI_JOB_NAME.svg

# docker:
#   image: docker:stable
#   stage: build
#   only:
#     - web
#   services:
#     - docker:dind
#   before_script:
#     - docker info
#   script: make docker
#   artifacts:
#     name: $ARTIFACT_NAME_TEMPLATE
#     paths:
#       - dist/docker/*


# test_amd64:
#   image: $GO_IMAGE
#   stage: test
#   only:
#     - web
#   services:
#     - name: influxdb:1.7.10
#       alias: influxdb
#   before_script:
#     - #Â TODO: download pcap files
#   script:
#     - go test -cover -coverprofile=.coverage ./...
#   after_script:
#     - go tool cover -func .coverage|tail -n1
#   coverage: '/[0-9]*\.[0-9]*/'
  